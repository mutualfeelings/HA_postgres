scope: stampede
name: {{ patroni_name }} 

restapi:
  listen: 0.0.0.0:8008
  connect_address: {{ ansible_default_ipv4.address }}:8008 

etcd:
  hosts: ["{{ patroni_node_1 }}:2379", "{{ patroni_node_2 }}:2379", "{{ patroni_node_3 }}:2379"]

bootstrap:
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576
    postgresql:
      use_pg_rewind: true
      use_slots: true
      parameters:
        wal_level: replica
        hot_standby: "on"
        logging_collector: "on"
        max_wal_senders: 5
        max_replication_slots: 5
        wal_log_hints: "on"

  initdb:
  - encoding: UTF8
  - data-checksums

  pg_hba:
  - host replication replicator 192.168.20.1/24 md5
  - host replication replicator 127.0.0.1/32 trust
  - host all all 192.168.20.1/24 md5
  - host all all 0.0.0.0/0 md5

  users:
    admin:
      password: admin
      options:
        - createrole
        - createdb

postgresql:
  listen: 0.0.0.0:{{ pg_port }}
  connect_address: {{ ansible_default_ipv4.address }}:{{ pg_port }} 
  data_dir: "{{ data_dir }}"
  bin_dir: "{{ bin_dir }}"
  pgpass: /tmp/pgpass0
  authentication:
    replication:
      username: {{ replic_user }}
      password: {{ replic_password }}
    superuser:
      username: {{ pg_user }}
      password: {{ pg_password }}

  parameters:
    unix_socket_directories: '/var/run/postgresql'

tags:
  nofailover: false
  noloadbalance: false
  clonefrom: false
  nosync: false